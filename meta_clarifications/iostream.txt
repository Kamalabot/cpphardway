The iostream header in C++ provides various functions and objects for input/output operations. The main functions of iostream can be categorized into:

1. Input functions:
    - std::cin: reads input from the standard input stream (usually the keyboard)
    - std::getline: reads a line of input from the standard input stream
    - std::scanf: reads formatted input from the standard input stream (similar to C's scanf)
2. Output functions:
    - std::cout: writes output to the standard output stream (usually the console)
    - std::cerr: writes error output to the standard error stream (usually the console)
    - std::printf: writes formatted output to the standard output stream (similar to C's printf)
3. Stream manipulation functions:
    - std::flush: flushes the output buffer (forces output to be displayed immediately)
    - std::endl: inserts a newline character and flushes the output buffer
4. Stream state functions:
    - std::good: checks if the stream is in a good state (no errors)
    - std::bad: checks if the stream is in a bad state (error occurred)
    - std::fail: checks if the stream has failed (e.g., invalid input)
5. Stream manipulation objects:
    - std::ostream: base class for output streams
    - std::istream: base class for input streams
    - std::iostream: base class for input/output streams

Some other important functions and objects in iostream include:

- std::streambuf: a buffer for input/output operations
- std::ios: a base class for input/output streams, providing various formatting and error-handling functions
- std::streampos and std::streamoff: used for manipulating stream positions and offsets

These functions and objects enable you to perform various input/output operations, such as reading and writing to the console, files, and other devices, as well as formatting and manipulating input and output streams.